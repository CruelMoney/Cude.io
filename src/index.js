import React from 'react'
import ReactDOM from 'react-dom'
import { createStore, applyMiddleware, compose } from 'redux';
import { Provider } from 'react-redux';
import reducers from './reducers';
import thunkMiddleware from 'redux-thunk'
import { createLogger } from 'redux-logger'
import { BrowserRouter } from 'react-router-dom'
import { AppContainer } from 'react-hot-loader'
import App from './app';
import './Theme/assets/js/classList.polyfill.js' 
require('smoothscroll-polyfill').polyfill(); //Only client does not work on server


// This value is rendered into the DOM by the server
const initialState = window.__INITIAL_STATE;

var store = null
if(process.env.NODE_ENV !== "production"){
  if(module.hot && module.hot.data && module.hot.data.store){
    store = module.hot.data.store
  }else{
    // Create store with the initial state generated by the server
    const reduxMiddleware = applyMiddleware(thunkMiddleware, createLogger())
    store = createStore(  
        reducers,
        initialState,
        compose(
          reduxMiddleware        
        )
      )
  }
}else{
  const reduxMiddleware = applyMiddleware(thunkMiddleware)
  store = createStore(reducers, initialState, compose(reduxMiddleware))
}

console.log(store.getState())
console.log(process.env.NODE_ENV)


ReactDOM.render(
  <Provider store={store}>
    <AppContainer>
       <BrowserRouter>
          <App />
        </ BrowserRouter>
    </AppContainer>
  </Provider>,
  document.getElementById('app')
)



if (module.hot) {
  module.hot.accept();
  module.hot.dispose((data) => {
    data.store = store;
  });
}